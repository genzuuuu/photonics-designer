('C', 'can be called by', 'c = gf.components.C(width=1.0, size=[10.0, 20.0], layer='WG')' ),
('L', 'can be called by', 'c = gf.components.L(width=1, size=[10, 20], layer='MTOP', port_type='electrical')' ),
('add_fiber_array_optical_south_electrical_north', 'can be called by', 'c = gf.components.add_fiber_array_optical_south_electrical_north(with_loopback=True, pad_spacing=100.0, fiber_spacing=127.0, pad_gc_spacing=250.0, electrical_port_orientation=90, xs_metal='xs_metal_routing')' ),
('add_fiducials', 'can be called by', 'c = gf.components.add_fiducials(gap=50, left='cross', right='cross', offset=[0, 0])' ),
('add_fiducials_offsets', 'can be called by', 'c = gf.components.add_fiducials_offsets(fiducial='cross', offsets=[[0, 100], [0, -100]])' ),
('add_frame', 'can be called by', 'c = gf.components.add_frame(width=10.0, spacing=10.0, layer='WG')' ),
('add_grating_couplers', 'can be called by', 'c = gf.components.add_grating_couplers(gc_port_name='o1')' ),
('add_grating_couplers_fiber_array', 'can be called by', 'c = gf.components.add_grating_couplers_fiber_array(grating_separation=127.0, gc_port_name='o1', gc_rotation=-90, straight_separation=5.0, with_loopback=False, cross_section='xs_sc', loopback_yspacing=4.0)' ),
('add_grating_couplers_with_loopback_fiber_array', 'can be called by', 'c = gf.components.add_grating_couplers_with_loopback_fiber_array(grating_separation=127.0, gc_port_name='o1', gc_rotation=-90, straight_separation=5.0, with_loopback=True, cross_section='xs_sc', loopback_yspacing=4.0)' ),
('add_grating_couplers_with_loopback_fiber_single', 'can be called by', 'c = gf.components.add_grating_couplers_with_loopback_fiber_single(component='spiral_inner_io_fiber_single', gc_port_name='o1', with_loopback=True, loopback_xspacing=5.0, rotation=90)' ),
('add_trenches', 'can be called by', 'c = gf.components.add_trenches(cross_section='xs_rc_with_trenches', top=True, bot=True, right=False, left=False)' ),
('add_trenches90', 'can be called by', 'c = gf.components.add_trenches90(cross_section='xs_rc_with_trenches', top=False, bot=True, right=True, left=False)' ),
('align_wafer', 'can be called by', 'c = gf.components.align_wafer(width=10.0, spacing=10.0, cross_length=80.0, layer='WG', square_corner='bottom_left')' ),
('array', 'can be called by', 'c = gf.components.array(component='pad', spacing=[150.0, 150.0], columns=6, rows=1, add_ports=True)' ),
('array_with_fanout', 'can be called by', 'c = gf.components.array_with_fanout(component='pad', columns=3, pitch=150.0, waveguide_pitch=10.0, start_straight_length=5.0, end_straight_length=40.0, component_port_name='e4', bend='bend_euler', cross_section='xs_sc')' ),
('array_with_fanout_2d', 'can be called by', 'c = gf.components.array_with_fanout_2d(pitch=150.0, columns=3, rows=2)' ),
('array_with_via', 'can be called by', 'c = gf.components.array_with_via(columns=3, spacing=150.0, via_spacing=10.0, straight_length=60.0, via_stack_dy=0, port_orientation=180)' ),
('array_with_via_2d', 'can be called by', 'c = gf.components.array_with_via_2d(spacing=[150.0, 150.0], columns=3, rows=2)' ),
('awg', 'can be called by', 'c = gf.components.awg(arms=10, outputs=3, fpr_spacing=50.0)' ),
('bbox', 'can be called by', 'c = gf.components.bbox(bbox=[[-1.0, -1.0], [3.0, 4.0]], layer=[1, 0], top=0, bottom=0, left=0, right=0)' ),
('bend_circular', 'can be called by', 'c = gf.components.bend_circular(angle=90.0, cross_section='xs_sc')' ),
('bend_circular_heater', 'can be called by', 'c = gf.components.bend_circular_heater(angle=90, heater_to_wg_distance=1.2, heater_width=0.5, layer_heater='HEATER', cross_section='xs_sc')' ),
('bend_euler', 'can be called by', 'c = gf.components.bend_euler(angle=90.0, p=0.5, with_arc_floorplan=True, direction='ccw', cross_section='xs_sc')' ),
('bend_euler_s', 'can be called by', 'c = gf.components.bend_euler_s()' ),
('bend_euler_trenches', 'can be called by', 'c = gf.components.bend_euler_trenches(cross_section='xs_rc_with_trenches', top=False, bot=True, right=True, left=False)' ),
('bend_s', 'can be called by', 'c = gf.components.bend_s(size=[11.0, 1.8], npoints=99, cross_section='xs_sc')' ),
('bend_straight_bend', 'can be called by', 'c = gf.components.bend_straight_bend(straight_length=10.0, angle=90, p=0.5, with_arc_floorplan=True, npoints=720, direction='ccw')' ),
('bezier', 'can be called by', 'c = gf.components.bezier(control_points=[[0.0, 0.0], [5.0, 0.0], [5.0, 1.8], [10.0, 1.8]], npoints=201, with_manhattan_facing_angles=True, cross_section='xs_sc')' ),
('cavity', 'can be called by', 'c = gf.components.cavity(coupler='coupler', length=0.1, gap=0.2)' ),
('cdc', 'can be called by', 'c = gf.components.cdc(length=30.0, gap=0.5, period=0.22, dc=0.5, dx=10.0, dy=1.8, width_top=2.0, width_bot=0.75, fins=False, fin_size=[0.2, 0.05])' ),
('cdsem_all', 'can be called by', 'c = gf.components.cdsem_all(widths=[0.4, 0.45, 0.5, 0.6, 0.8, 1.0], dense_lines_width=0.3, dense_lines_width_difference=0.02, dense_lines_gap=0.3, dense_lines_labels=['DL', 'DM', 'DH'], straight='straight', bend90='bend_circular', cross_section='xs_sc')' ),
('cdsem_bend180', 'can be called by', 'c = gf.components.cdsem_bend180(width=0.5, radius=10.0, wg_length=420.0, straight='straight', bend90='bend_circular', cross_section='xs_sc')' ),
('cdsem_coupler', 'can be called by', 'c = gf.components.cdsem_coupler(length=420.0, gaps=[0.15, 0.2, 0.25], cross_section='xs_sc', spacing=7.0)' ),
('cdsem_straight', 'can be called by', 'c = gf.components.cdsem_straight(widths=[0.4, 0.45, 0.5, 0.6, 0.8, 1.0], length=420.0, cross_section='xs_sc', spacing=7.0)' ),
('cdsem_straight_density', 'can be called by', 'c = gf.components.cdsem_straight_density(widths=[0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3], gaps=[0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3], length=420.0, label='', cross_section='xs_sc')' ),
('circle', 'can be called by', 'c = gf.components.circle(radius=10.0, angle_resolution=2.5, layer='WG')' ),
('coh_rx_dual_pol', 'can be called by', 'c = gf.components.coh_rx_dual_pol(cross_section='xs_sc', lo_splitter='mmi1x2', single_pol_rx_spacing=50.0, splitter_coh_rx_spacing=40.0)' ),
('coh_rx_single_pol', 'can be called by', 'c = gf.components.coh_rx_single_pol(bend='bend_euler', cross_section='xs_sc', det_spacing=[60.0, 50.0], with_pads=True, pad_det_spacing=80.0, in_wg_length=20.0)' ),
('coh_tx_dual_pol', 'can be called by', 'c = gf.components.coh_tx_dual_pol(splitter='mmi1x2', spol_coh_tx='coh_tx_single_pol', yspacing=10.0, xspacing=40.0, cross_section='xs_sc')' ),
('coh_tx_single_pol', 'can be called by', 'c = gf.components.coh_tx_single_pol(balanced_phase_shifters=False, mzm_y_spacing=50.0, phase_shifter='straight_pin', phase_shifter_length=100.0, mzm_ps_spacing=40.0, splitter='mmi1x2', mzm_length=200.0, with_pads=False, xspacing=40.0, pad_array='pad_array', cross_section='xs_sc')' ),
('compass', 'can be called by', 'c = gf.components.compass(size=[4.0, 2.0], layer='WG', port_type='electrical', port_inclusion=0.0, port_orientations=[180, 90, 0, -90])' ),
('compensation_path', 'can be called by', 'c = gf.components.compensation_path(direction='top', cross_section='xs_sc')' ),
('component_lattice_generic', 'can be called by', 'c = gf.components.component_lattice_generic()' ),
('copy_layers', 'can be called by', 'c = gf.components.copy_layers(layers=[[1, 0], [2, 0]])' ),
('coupler', 'can be called by', 'c = gf.components.coupler(gap=0.236, length=20.0, dy=4.0, dx=10.0, cross_section='xs_sc')' ),
('coupler90', 'can be called by', 'c = gf.components.coupler90(gap=0.2, radius=10.0, cross_section='xs_sc')' ),
('coupler90bend', 'can be called by', 'c = gf.components.coupler90bend(radius=10.0, gap=0.2, cross_section_inner='xs_sc', cross_section_outer='xs_sc')' ),
('coupler90circular', 'can be called by', 'c = gf.components.coupler90circular(gap=0.2, radius=10.0, cross_section='xs_sc')' ),
('coupler_adiabatic', 'can be called by', 'c = gf.components.coupler_adiabatic(length1=20.0, length2=50.0, length3=30.0, wg_sep=1.0, input_wg_sep=3.0, output_wg_sep=3.0, dw=0.1, cross_section='xs_sc')' ),
('coupler_asymmetric', 'can be called by', 'c = gf.components.coupler_asymmetric(gap=0.234, dy=2.5, dx=10.0, cross_section='xs_sc_no_pins')' ),
('coupler_bend', 'can be called by', 'c = gf.components.coupler_bend(radius=10.0, coupler_gap=0.2, coupling_angle_coverage=120.0, cross_section_inner='xs_sc', cross_section_outer='xs_sc')' ),
('coupler_bent', 'can be called by', 'c = gf.components.coupler_bent(gap=0.2, radius=26, length=8.6, width1=0.4, width2=0.4, length_straight=10, cross_section='xs_sc')' ),
('coupler_broadband', 'can be called by', 'c = gf.components.coupler_broadband(w_sc=0.5, gap_sc=0.2, w_top=0.6, gap_pc=0.3, legnth_taper=1.0, length_coupler_straight=12.4, lenght_coupler_big_gap=4.7, cross_section='xs_sc', radius=10.0)' ),
('coupler_full', 'can be called by', 'c = gf.components.coupler_full(coupling_length=40.0, dx=10.0, dy=4.8, gap=0.5, dw=0.1, cross_section='xs_sc')' ),
('coupler_ring', 'can be called by', 'c = gf.components.coupler_ring(gap=0.2, radius=5.0, length_x=4.0, cross_section='xs_sc', length_extension=3)' ),
('coupler_ring_point', 'can be called by', 'c = gf.components.coupler_ring_point()' ),
('coupler_straight', 'can be called by', 'c = gf.components.coupler_straight(length=10.0, gap=0.27, cross_section='xs_sc_no_pins')' ),
('coupler_straight_asymmetric', 'can be called by', 'c = gf.components.coupler_straight_asymmetric(length=10.0, gap=0.27, width_top=0.5, width_bot=1, cross_section='xs_sc')' ),
('coupler_symmetric', 'can be called by', 'c = gf.components.coupler_symmetric(gap=0.234, dy=4.0, dx=10.0, cross_section='xs_sc_no_pins')' ),
('coupler_trenches', 'can be called by', 'c = gf.components.coupler_trenches(cross_section='xs_rc_with_trenches', top=True, bot=True, right=False, left=False)' ),
('cross', 'can be called by', 'c = gf.components.cross(length=10.0, width=3.0, layer='WG')' ),
('crossing', 'can be called by', 'c = gf.components.crossing(cross_section='xs_sc')' ),
('crossing45', 'can be called by', 'c = gf.components.crossing45(port_spacing=40.0, alpha=0.08, npoints=101, cross_section='xs_sc', cross_section_bends='xs_sc_no_pins')' ),
('crossing_arm', 'can be called by', 'c = gf.components.crossing_arm(r1=3.0, r2=1.1, w=1.2, L=3.4, layer_slab='SLAB150', cross_section='xs_sc')' ),
('crossing_etched', 'can be called by', 'c = gf.components.crossing_etched(width=0.5, r1=3.0, r2=1.1, w=1.2, L=3.4, layer_wg='WG', layer_slab='SLAB150')' ),
('crossing_from_taper', 'can be called by', 'c = gf.components.crossing_from_taper()' ),
('cutback_2x2', 'can be called by', 'c = gf.components.cutback_2x2(cols=4, rows=5, port1='o1', port2='o2', port3='o3', port4='o4', mirror=False, cross_section='xs_sc')' ),
('cutback_bend', 'can be called by', 'c = gf.components.cutback_bend(straight_length=5.0, rows=6, cols=5)' ),
('cutback_bend180', 'can be called by', 'c = gf.components.cutback_bend180(straight_length=5.0, rows=6, cols=6, spacing=3)' ),
('cutback_bend180circular', 'can be called by', 'c = gf.components.cutback_bend180circular(straight_length=5.0, rows=6, cols=6, spacing=3)' ),
('cutback_bend90', 'can be called by', 'c = gf.components.cutback_bend90(straight_length=5.0, rows=6, cols=6, spacing=5)' ),
('cutback_bend90circular', 'can be called by', 'c = gf.components.cutback_bend90circular(straight_length=5.0, rows=6, cols=6, spacing=5)' ),
('cutback_component', 'can be called by', 'c = gf.components.cutback_component(cols=4, rows=5, port1='o1', port2='o2', mirror=False, mirror1=False, mirror2=False, cross_section='xs_sc')' ),
('cutback_component_mirror', 'can be called by', 'c = gf.components.cutback_component_mirror(cols=4, rows=5, port1='o1', port2='o2', mirror=True, mirror1=False, mirror2=False, cross_section='xs_sc')' ),
('cutback_splitter', 'can be called by', 'c = gf.components.cutback_splitter(cols=4, rows=5, port1='o1', port2='o2', port3='o3', mirror=False, cross_section='xs_sc')' ),
('dbr', 'can be called by', 'c = gf.components.dbr(w1=0.475, w2=0.525, l1=0.159, l2=0.159, n=10, cross_section='xs_sc')' ),
('dbr_tapered', 'can be called by', 'c = gf.components.dbr_tapered(length=10.0, period=0.85, dc=0.5, w1=0.4, w2=1.0, taper_length=20.0, fins=False, fin_size=[0.2, 0.05], cross_section='xs_sc')' ),
('delay_snake', 'can be called by', 'c = gf.components.delay_snake(length=1600.0, L0=5.0, n=2, bend='bend_euler', cross_section='xs_sc')' ),
('delay_snake2', 'can be called by', 'c = gf.components.delay_snake2(length=1600.0, length0=0.0, length2=0.0, n=2, bend180='bend_euler180', cross_section='xs_sc')' ),
('delay_snake3', 'can be called by', 'c = gf.components.delay_snake3(length=1600.0, length0=0.0, length2=0.0, n=2, cross_section='xs_sc')' ),
('delay_snake_sbend', 'can be called by', 'c = gf.components.delay_snake_sbend(length=100.0, length1=0.0, length4=0.0, radius=5.0, waveguide_spacing=5.0, bend='bend_euler', sbend='bend_s', sbend_xsize=100.0, cross_section='xs_sc')' ),
('dicing_lane', 'can be called by', 'c = gf.components.dicing_lane(size=[50, 300], layer_dicing='DICING')' ),
('die', 'can be called by', 'c = gf.components.die(size=[10000.0, 10000.0], street_width=100.0, street_length=1000.0, die_name='chip99', text_size=100.0, text_location='SW', layer='FLOORPLAN', bbox_layer='FLOORPLAN', draw_corners=False)' ),
('die_bbox', 'can be called by', 'c = gf.components.die_bbox(street_width=100.0, text_size=100.0, text_anchor='sw', layer='MTOP', padding=10.0)' ),
('die_bbox_frame', 'can be called by', 'c = gf.components.die_bbox_frame(bbox=[[-1.0, -1.0], [3.0, 4.0]], street_width=100.0, street_length=1000.0, text_size=100.0, text_anchor='sw', layer='MTOP', padding=10.0)' ),
('disk', 'can be called by', 'c = gf.components.disk(radius=10.0, gap=0.2, wrap_angle_deg=180.0, parity=1, cross_section='xs_sc')' ),
('disk_heater', 'can be called by', 'c = gf.components.disk_heater(radius=10.0, gap=0.2, wrap_angle_deg=180.0, parity=1, cross_section='xs_sc', heater_layer='HEATER', via_stack='via_stack_heater_mtop', heater_width=5.0, heater_extent=2.0, via_width=10.0, port_orientation=90)' ),
('edge_coupler_array', 'can be called by', 'c = gf.components.edge_coupler_array(n=5, pitch=127.0, x_reflection=False, text_offset=[10, 20], text_rotation=0, text_mirror=False, angle=0, place_x_by_port=True, space_y_by_port=False, alignment_port='o1')' ),
('edge_coupler_array_with_loopback', 'can be called by', 'c = gf.components.edge_coupler_array_with_loopback(cross_section='xs_sc', radius=30, n=8, pitch=127.0, extension_length=1.0, right_loopback=True, x_reflection=False, text_offset=[0, 0], text_rotation=0, text_mirror=False, angle=0, place_x_by_port=True, space_y_by_port=False, alignment_port='o1')' ),
('edge_coupler_silicon', 'can be called by', 'c = gf.components.edge_coupler_silicon(length=100, width1=0.5, width2=0.2, with_two_ports=True, cross_section='xs_sc', port_order_name=['o1', 'o2'], port_order_types=['optical', 'optical'])' ),
('ellipse', 'can be called by', 'c = gf.components.ellipse(radii=[10.0, 5.0], angle_resolution=2.5, layer='WG')' ),
('extend_ports', 'can be called by', 'c = gf.components.extend_ports(length=5.0, port_type='optical', centered=False)' ),
('fiber', 'can be called by', 'c = gf.components.fiber(core_diameter=10, cladding_diameter=125, layer_core='WG', layer_cladding='WGCLAD')' ),
('fiber_array', 'can be called by', 'c = gf.components.fiber_array(n=8, pitch=127.0, core_diameter=10, cladding_diameter=125, layer_core='WG', layer_cladding='WGCLAD')' ),
('fiducial_squares', 'can be called by', 'c = gf.components.fiducial_squares(layer='WG', size=[5.0, 5.0], offset=0.14)' ),
('ge_detector_straight_si_contacts', 'can be called by', 'c = gf.components.ge_detector_straight_si_contacts(length=80.0, via_stack_width=10.0, via_stack_spacing=5.0, via_stack_offset=0.0)' ),
('grating_coupler_array', 'can be called by', 'c = gf.components.grating_coupler_array(pitch=127.0, n=6, port_name='o1', rotation=0, with_loopback=False, cross_section='xs_sc', grating_coupler_spacing=0.0)' ),
('grating_coupler_dual_pol', 'can be called by', 'c = gf.components.grating_coupler_dual_pol(period_x=0.58, period_y=0.58, x_span=11, y_span=11, length_taper=150.0, width_taper=10.0, polarization='dual', wavelength=1.55, base_layer='WG', cross_section='xs_sc')' ),
('grating_coupler_elliptical', 'can be called by', 'c = gf.components.grating_coupler_elliptical(polarization='te', taper_length=16.6, taper_angle=40.0, wavelength=1.554, fiber_angle=15.0, grating_line_width=0.343, neff=2.638, nclad=1.443, n_periods=30, big_last_tooth=False, layer_slab='SLAB150', slab_xmin=-1.0, slab_offset=2.0, spiked=True, cross_section='xs_sc')' ),
('grating_coupler_elliptical_arbitrary', 'can be called by', 'c = gf.components.grating_coupler_elliptical_arbitrary(gaps=[0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1], widths=[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], taper_length=16.6, taper_angle=60.0, wavelength=1.554, fiber_angle=15.0, nclad=1.443, layer_slab='SLAB150', taper_to_slab_offset=-3.0, polarization='te', spiked=True, bias_gap=0, cross_section='xs_sc')' ),
('grating_coupler_elliptical_lumerical', 'can be called by', 'c = gf.components.grating_coupler_elliptical_lumerical(parameters=[-2.429836, 0.1, 0.48007, 0.1, 0.607398, 0.1, 0.449884, 0.1, 0.427412, 0.1, 0.47579, 0.1, 0.502665, 0.100029, 0.510037, 0.1, 0.4944, 0.10796, 0.474006, 0.149727, 0.432728, 0.183953, 0.387202, 0.236018, 0.360322, 0.242618, 0.357704, 0.260664, 0.35261, 0.246682, 0.371749, 0.229208, 0.377696, 0.224653, 0.376544, 0.220418, 0.380476, 0.219236, 0.379887, 0.217004, 0.382917, 0.218278, 0.364132, 0.237291, 0.367683, 0.248651, 0.344151, 0.273357, 0.330623, 0.273504], layer='WG', layer_slab='SLAB150', taper_angle=55, taper_length=12.6, fiber_angle=5, bias_gap=0)' ),
('grating_coupler_elliptical_trenches', 'can be called by', 'c = gf.components.grating_coupler_elliptical_trenches(polarization='te', taper_length=16.6, taper_angle=30.0, trenches_extra_angle=9.0, wavelength=1.53, fiber_angle=15.0, grating_line_width=0.343, neff=2.638, ncladding=1.443, layer_trench='SHALLOW_ETCH', p_start=26, n_periods=30, end_straight_length=0.2, cross_section='xs_sc')' ),
('grating_coupler_elliptical_uniform', 'can be called by', 'c = gf.components.grating_coupler_elliptical_uniform(n_periods=20, period=0.75, fill_factor=0.5)' ),
('grating_coupler_loss_fiber_array', 'can be called by', 'c = gf.components.grating_coupler_loss_fiber_array(pitch=127.0, port_name='o1', cross_section='xs_sc')' ),
('grating_coupler_loss_fiber_array4', 'can be called by', 'c = gf.components.grating_coupler_loss_fiber_array4(pitch=127.0)' ),
('grating_coupler_loss_fiber_single', 'can be called by', 'c = gf.components.grating_coupler_loss_fiber_single(cross_section='xs_sc')' ),
('grating_coupler_rectangular', 'can be called by', 'c = gf.components.grating_coupler_rectangular(n_periods=20, period=0.75, fill_factor=0.5, width_grating=11.0, length_taper=150.0, polarization='te', wavelength=1.55, slab_xmin=-1.0, slab_offset=1.0, cross_section='xs_sc')' ),
('grating_coupler_rectangular_arbitrary', 'can be called by', 'c = gf.components.grating_coupler_rectangular_arbitrary(gaps=[0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2], widths=[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], width_grating=11.0, length_taper=150.0, polarization='te', wavelength=1.55, slab_xmin=-1.0, slab_offset=1.0, cross_section='xs_sc')' ),
('grating_coupler_rectangular_arbitrary_slab', 'can be called by', 'c = gf.components.grating_coupler_rectangular_arbitrary_slab(gaps=[0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2], widths=[0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5], width_grating=11.0, length_taper=150.0, polarization='te', wavelength=1.55, layer_slab='SLAB150', slab_offset=2.0, fiber_angle=15, cross_section='xs_sc')' ),
('grating_coupler_tree', 'can be called by', 'c = gf.components.grating_coupler_tree(n=4, straight_spacing=4.0, with_loopback=False, bend='bend_euler', fanout_length=0.0)' ),
('greek_cross', 'can be called by', 'c = gf.components.greek_cross(length=30, layers=['WG', 'N'], widths=[2.0, 3.0])' ),
('greek_cross_offset_pads', 'can be called by', 'c = gf.components.greek_cross_offset_pads(cross_struct_length=30.0, cross_struct_width=1.0, cross_struct_layers=['WG'], cross_implant_length=30.0, cross_implant_width=2.0, cross_implant_layers=['N'], contact_layers=['WG', 'NPP'], contact_offset=10, contact_buffer=10, pad_width=50)' ),
('greek_cross_with_pads', 'can be called by', 'c = gf.components.greek_cross_with_pads(pad_spacing=150.0)' ),
('hexagon', 'can be called by', 'c = gf.components.hexagon(sides=6, side_length=10, layer='WG', port_type='placement', snap_to_grid=True)' ),
('hline', 'can be called by', 'c = gf.components.hline(length=10.0, width=0.5, layer='WG', port_type='optical')' ),
('interdigital_capacitor', 'can be called by', 'c = gf.components.interdigital_capacitor(fingers=4, finger_length=20.0, finger_gap=2.0, thickness=5.0, layer='WG')' ),
('interdigital_capacitor_enclosed', 'can be called by', 'c = gf.components.interdigital_capacitor_enclosed(cpw_dimensions=[10, 6], gap_to_ground=5, gap_layer='DEEPTRENCH', metal_layer='WG')' ),
('litho_calipers', 'can be called by', 'c = gf.components.litho_calipers(notch_size=[2.0, 5.0], notch_spacing=2.0, num_notches=11, offset_per_notch=0.1, row_spacing=0.0, layer1='WG', layer2='SLAB150')' ),
('litho_ruler', 'can be called by', 'c = gf.components.litho_ruler(height=2, width=0.5, spacing=2.0, scale=[3, 1, 1, 1, 1, 2, 1, 1, 1, 1], num_marks=21, layer='WG')' ),
('litho_steps', 'can be called by', 'c = gf.components.litho_steps(line_widths=[1.0, 2.0, 4.0, 8.0, 16.0], line_spacing=10.0, height=100.0, layer='WG')' ),
('logo', 'can be called by', 'c = gf.components.logo(text='GDSFACTORY')' ),
('loop_mirror', 'can be called by', 'c = gf.components.loop_mirror(bend90='bend_euler')' ),
('loss_deembedding_ch12_34', 'can be called by', 'c = gf.components.loss_deembedding_ch12_34(pitch=127.0, port_name='o1', cross_section='xs_sc')' ),
('loss_deembedding_ch13_24', 'can be called by', 'c = gf.components.loss_deembedding_ch13_24(pitch=127.0, cross_section='xs_sc', port_name='o1')' ),
('loss_deembedding_ch14_23', 'can be called by', 'c = gf.components.loss_deembedding_ch14_23(pitch=127.0, cross_section='xs_sc', port_name='o1')' ),
('mmi1x2', 'can be called by', 'c = gf.components.mmi1x2(width_taper=1.0, length_taper=10.0, length_mmi=5.5, width_mmi=2.5, gap_mmi=0.25, width=0.0, cross_section='xs_sc')' ),
('mmi2x2', 'can be called by', 'c = gf.components.mmi2x2(width_taper=1.0, length_taper=10.0, length_mmi=5.5, width_mmi=2.5, gap_mmi=0.25, cross_section='xs_sc')' ),
('mode_converter', 'can be called by', 'c = gf.components.mode_converter(gap=0.3, length=10, mm_width=1.2, mc_mm_width=1, sm_width=0.5, taper_length=25, cross_section='xs_sc')' ),
('mzi', 'can be called by', 'c = gf.components.mzi(delta_length=10.0, length_y=2.0, length_x=0.1, splitter=gf.components.mmi(), with_splitter=True, port_e1_splitter='o2', port_e0_splitter='o3', port_e1_combiner='o2', port_e0_combiner='o3', cross_section='xs_sc', mirror_bot=False, add_optical_ports_arms=False, add_electrical_ports_bot=True)' ),
('mzi_phase_shifter', 'can be called by', 'c = gf.components.mzi_phase_shifter(delta_length=10.0, length_y=2.0, length_x=200, straight_x_top='straight_heater_metal', splitter=gf.components.mmi(), with_splitter=True, port_e1_splitter='o2', port_e0_splitter='o3', port_e1_combiner='o2', port_e0_combiner='o3', cross_section='xs_sc', mirror_bot=False, add_optical_ports_arms=False, add_electrical_ports_bot=True)' ),
('nxn', 'can be called by', 'c = gf.components.nxn(west=1, east=4, north=0, south=0, wg_width=0.5, layer='WG', wg_margin=1.0)' ),
('octagon', 'can be called by', 'c = gf.components.octagon(sides=8, side_length=10, layer='WG', port_type='placement', snap_to_grid=True)' ),
('optimal_90deg', 'can be called by', 'c = gf.components.optimal_90deg(width=100, num_pts=15, length_adjust=1, layer=[1, 0])' ),
('optimal_hairpin', 'can be called by', 'c = gf.components.optimal_hairpin(width=0.2, pitch=0.6, length=10, turn_ratio=4, num_pts=50, layer=[1, 0])' ),
('optimal_step', 'can be called by', 'c = gf.components.optimal_step(start_width=10, end_width=22, num_pts=50, width_tol=0.001, anticrowding_factor=1.2, symmetric=False, layer=[1, 0])' ),
('pack_doe', 'can be called by', 'c = gf.components.pack_doe(doe='mmi1x2', do_permutations=False)' ),
('pack_doe_grid', 'can be called by', 'c = gf.components.pack_doe_grid(doe='mmi1x2', do_permutations=False, with_text=False)' ),
('pad', 'can be called by', 'c = gf.components.pad(size=[100.0, 100.0], layer='MTOP', port_inclusion=0)' ),
('pad_array', 'can be called by', 'c = gf.components.pad_array(pad='pad', spacing=[150.0, 150.0], columns=6, rows=1, orientation=270)' ),
('pad_array0', 'can be called by', 'c = gf.components.pad_array0(pad='pad', spacing=[150.0, 150.0], columns=1, rows=3, orientation=0)' ),
('pad_array180', 'can be called by', 'c = gf.components.pad_array180(pad='pad', spacing=[150.0, 150.0], columns=1, rows=3, orientation=180)' ),
('pad_array270', 'can be called by', 'c = gf.components.pad_array270(pad='pad', spacing=[150.0, 150.0], columns=6, rows=1, orientation=270)' ),
('pad_array90', 'can be called by', 'c = gf.components.pad_array90(pad='pad', spacing=[150.0, 150.0], columns=6, rows=1, orientation=90)' ),
('pad_gsg_open', 'can be called by', 'c = gf.components.pad_gsg_open(size=[22, 7], layer_metal='MTOP', metal_spacing=5.0, short=False, pad_spacing=150)' ),
('pad_gsg_short', 'can be called by', 'c = gf.components.pad_gsg_short(size=[22, 7], layer_metal='MTOP', metal_spacing=5.0, short=True, pad_spacing=150)' ),
('pad_rectangular', 'can be called by', 'c = gf.components.pad_rectangular(size='pad_size', layer='MTOP', port_inclusion=0)' ),
('pads_shorted', 'can be called by', 'c = gf.components.pads_shorted(columns=8, pad_spacing=150.0, layer_metal='MTOP', metal_width=10)' ),
('pixel', 'can be called by', 'c = gf.components.pixel(size=1.0, layer='WG')' ),
('polarization_splitter_rotator', 'can be called by', 'c = gf.components.polarization_splitter_rotator(width_taper_in=[0.54, 0.69, 0.83], length_taper_in=[4.0, 44.0], width_coupler=[0.9, 0.405], length_coupler=7.0, gap=0.15, width_out=0.54, length_out=14.33, dy=5.0, cross_section='xs_sc')' ),
('qrcode', 'can be called by', 'c = gf.components.qrcode(data='mask01', psize=1, layer='WG')' ),
('ramp', 'can be called by', 'c = gf.components.ramp(length=10.0, width1=5.0, width2=8.0, layer='WG')' ),
('rectangle', 'can be called by', 'c = gf.components.rectangle(size=[4.0, 2.0], layer='WG', centered=False, port_type='electrical', port_orientations=[180, 90, 0, -90], round_corners_east_west=False, round_corners_north_south=False)' ),
('rectangle_with_slits', 'can be called by', 'c = gf.components.rectangle_with_slits(size=[100.0, 200.0], layer='WG', layer_slit='SLAB150', centered=False, slit_size=[1.0, 1.0], slit_spacing=[20, 20], slit_enclosure=10)' ),
('rectangles', 'can be called by', 'c = gf.components.rectangles(size=[4.0, 2.0], offsets=[0, 1], layers=['WG', 'SLAB150'], centered=True)' ),
('rectangular_ring', 'can be called by', 'c = gf.components.rectangular_ring(enclosed_size=[4.0, 2.0], width=0.5, layer='WG', centered=False)' ),
('regular_polygon', 'can be called by', 'c = gf.components.regular_polygon(sides=6, side_length=10, layer='WG', port_type='placement', snap_to_grid=True)' ),
('resistance_meander', 'can be called by', 'c = gf.components.resistance_meander(pad_size=[50.0, 50.0], num_squares=1000, width=1.0, res_layer='MTOP', pad_layer='MTOP', gnd_layer='MTOP')' ),
('resistance_sheet', 'can be called by', 'c = gf.components.resistance_sheet(width=10, layers=['SLAB90', 'NPP'], layer_offsets=[0, 0.2], pad_pitch=100.0, port_orientation1=180, port_orientation2=0)' ),
('ring', 'can be called by', 'c = gf.components.ring(radius=10.0, width=0.5, angle_resolution=2.5, layer='WG', angle=360)' ),
('ring_crow', 'can be called by', 'c = gf.components.ring_crow(length_x=0)' ),
('ring_crow_couplers', 'can be called by', 'c = gf.components.ring_crow_couplers()' ),
('ring_double', 'can be called by', 'c = gf.components.ring_double(gap=0.2, radius=10.0, length_x=0.01, length_y=0.01, cross_section='xs_sc')' ),
('ring_double_heater', 'can be called by', 'c = gf.components.ring_double_heater(gap=0.2, radius=10.0, length_x=1.0, length_y=0.01, cross_section_heater='xs_heater_metal', cross_section_waveguide_heater='xs_sc_heater_metal', cross_section='xs_sc', via_stack_offset=[1, 0])' ),
('ring_double_pn', 'can be called by', 'c = gf.components.ring_double_pn(add_gap=0.3, drop_gap=0.3, radius=5.0, doping_angle=85, doped_heater=True, doped_heater_angle_buffer=10, doped_heater_layer='NPP', doped_heater_width=0.5, doped_heater_waveguide_offset=2.175)' ),
('ring_double_trenches', 'can be called by', 'c = gf.components.ring_double_trenches(cross_section='xs_rc_with_trenches', top=True, bot=True, right=False, left=False)' ),
('ring_section_based', 'can be called by', 'c = gf.components.ring_section_based(gap=0.3, radius=5.0, add_drop=False, cross_sections_sequence='AB', start_angle=10.0, bus_cross_section='xs_sc', ang_res=0.1)' ),
('ring_single', 'can be called by', 'c = gf.components.ring_single(gap=0.2, radius=10.0, length_x=4.0, length_y=0.6, cross_section='xs_sc', pass_cross_section_to_bend=True)' ),
('ring_single_array', 'can be called by', 'c = gf.components.ring_single_array(spacing=5.0, cross_section='xs_sc')' ),
('ring_single_bend_coupler', 'can be called by', 'c = gf.components.ring_single_bend_coupler(radius=5.0, gap=0.2, coupling_angle_coverage=180.0, length_x=0.6, length_y=0.6, cross_section_inner='xs_sc', cross_section_outer='xs_sc')' ),
('ring_single_dut', 'can be called by', 'c = gf.components.ring_single_dut(gap=0.2, length_x=4, length_y=0, radius=5.0, with_component=True, port_name='o1')' ),
('ring_single_heater', 'can be called by', 'c = gf.components.ring_single_heater(gap=0.2, radius=10.0, length_x=4.0, length_y=0.6, cross_section_waveguide_heater='xs_sc_heater_metal', cross_section='xs_sc', via_stack_offset=[0, 0])' ),
('ring_single_pn', 'can be called by', 'c = gf.components.ring_single_pn(gap=0.3, radius=5.0, doping_angle=250, doped_heater=True, doped_heater_angle_buffer=10, doped_heater_layer='NPP', doped_heater_width=0.5, doped_heater_waveguide_offset=2.175)' ),
('ring_single_trenches', 'can be called by', 'c = gf.components.ring_single_trenches(cross_section='xs_rc_with_trenches', top=True, bot=True, right=False, left=False)' ),
('seal_ring', 'can be called by', 'c = gf.components.seal_ring(bbox=[[-1.0, -1.0], [3.0, 4.0]], width=10, padding=10.0, with_north=True, with_south=True, with_east=True, with_west=True)' ),
('seal_ring_segmented', 'can be called by', 'c = gf.components.seal_ring_segmented(bbox=[[-1.0, -1.0], [3.0, 4.0]], length_segment=10, width_segment=3, spacing_segment=2, with_north=True, with_south=True, with_east=True, with_west=True, padding=10.0)' ),
('snspd', 'can be called by', 'c = gf.components.snspd(wire_width=0.2, wire_pitch=0.6, size=[10, 8], turn_ratio=4, terminals_same_side=False, layer=[1, 0])' ),
('spiral_double', 'can be called by', 'c = gf.components.spiral_double(min_bend_radius=10.0, separation=2.0, number_of_loops=3, npoints=1000, cross_section='xs_sc')' ),
('spiral_external_io', 'can be called by', 'c = gf.components.spiral_external_io(N=6, x_inner_length_cutback=300.0, x_inner_offset=0.0, y_straight_inner_top=0.0, xspacing=3.0, yspacing=3.0, cross_section='xs_sc', with_inner_ports=False, y_straight_outer_offset=0.0, inner_loop_spacing_offset=0.0, mirror_straight=False)' ),
('spiral_inner_io', 'can be called by', 'c = gf.components.spiral_inner_io(N=6, x_straight_inner_right=150.0, x_straight_inner_left=50.0, y_straight_inner_top=50.0, y_straight_inner_bottom=10.0, grating_spacing=127.0, waveguide_spacing=3.0, cross_section='xs_sc', asymmetric_cross_section=False)' ),
('spiral_inner_io_fiber_array', 'can be called by', 'c = gf.components.spiral_inner_io_fiber_array(N=6, x_straight_inner_right=150.0, x_straight_inner_left=50.0, y_straight_inner_top=50.0, y_straight_inner_bottom=10.0, grating_spacing=127.0, waveguide_spacing=3.0, length=20000.0, cross_section='xs_sc', cross_section_loopback='xs_sc', asymmetric_cross_section=False)' ),
('spiral_inner_io_fiber_single', 'can be called by', 'c = gf.components.spiral_inner_io_fiber_single(cross_section='xs_sc', x_straight_inner_right=40.0, x_straight_inner_left=75.0, y_straight_inner_top=10.0, y_straight_inner_bottom=0.0, grating_spacing=200.0)' ),
('spiral_meander', 'can be called by', 'c = gf.components.spiral_meander(length=1000.0, spacing=2.0, heater_width=2.5, extension_length=15.0, via_stack='via_stack_heater_mtop', heater_taper_length=10.0, taper_length=10, n=3)' ),
('spiral_racetrack', 'can be called by', 'c = gf.components.spiral_racetrack(min_radius=5.0, straight_length=20.0, spacings=[2, 2, 3, 3, 2, 2], cross_section='xs_sc', with_inner_ports=False, extra_90_deg_bend=False)' ),
('spiral_racetrack_fixed_length', 'can be called by', 'c = gf.components.spiral_racetrack_fixed_length(length=1000, in_out_port_spacing=150, n_straight_sections=8, min_radius=5.0, min_spacing=5.0, cross_section='xs_sc', with_inner_ports=False)' ),
('spiral_racetrack_heater_doped', 'can be called by', 'c = gf.components.spiral_racetrack_heater_doped(straight_length=30, spacing=2, num=8, waveguide_cross_section='xs_sc', heater_cross_section='xs_npp')' ),
('spiral_racetrack_heater_metal', 'can be called by', 'c = gf.components.spiral_racetrack_heater_metal(straight_length=30, spacing=2, num=8, waveguide_cross_section='xs_sc', heater_cross_section='xs_heater_metal')' ),
('splitter_chain', 'can be called by', 'c = gf.components.splitter_chain(columns=3)' ),
('splitter_tree', 'can be called by', 'c = gf.components.splitter_tree(coupler = 'mmi1x2', noutputs=4, spacing=[90.0, 50.0], cross_section='xs_sc')' ),
('staircase', 'can be called by', 'c = gf.components.staircase(length_v=5.0, length_h=5.0, rows=4)' ),
('straight', 'can be called by', 'c = gf.components.straight(length=10.0, npoints=2, cross_section='xs_sc')' ),
('straight_array', 'can be called by', 'c = gf.components.straight_array(n=4, spacing=4.0, length=10.0, cross_section='xs_sc')' ),
('straight_heater_doped_rib', 'can be called by', 'c = gf.components.straight_heater_doped_rib(length=320.0, nsections=3, via_stack_metal_size=[10.0, 10.0], via_stack_size=[10.0, 10.0], heater_width=2.0, heater_gap=0.8, via_stack_gap=0.0, width=0.5, xoffset_tip1=0.2, xoffset_tip2=0.4)' ),
('straight_heater_doped_strip', 'can be called by', 'c = gf.components.straight_heater_doped_strip(length=320.0, nsections=3, via_stack_metal_size=[10.0, 10.0], via_stack_size=[10.0, 10.0], heater_width=2.0, heater_gap=0.8, via_stack_gap=0.0, width=0.5, xoffset_tip1=0.2, xoffset_tip2=0.4)' ),
('straight_heater_meander', 'can be called by', 'c = gf.components.straight_heater_meander(length=300.0, spacing=2.0, heater_width=2.5, extension_length=15.0, layer_heater='HEATER', via_stack='via_stack_heater_mtop', heater_taper_length=10.0, straight_widths=[0.8, 0.9, 0.8], taper_length=10)' ),
('straight_heater_meander_doped', 'can be called by', 'c = gf.components.straight_heater_meander_doped(length=300.0, spacing=2.0, cross_section='xs_sc', heater_width=1.5, extension_length=15.0, layers_doping=['P', 'PP', 'PPP'], radius=5.0, straight_widths=[0.8, 0.9, 0.8], taper_length=10)' ),
('straight_heater_metal', 'can be called by', 'c = gf.components.straight_heater_metal(length=320.0, length_undercut_spacing=6.0, length_undercut=30.0, length_straight=0.1, length_straight_input=15.0, cross_section='xs_sc', cross_section_heater='xs_heater_metal', cross_section_waveguide_heater='xs_sc_heater_metal', cross_section_heater_undercut='xs_sc_heater_metal_undercut', with_undercut=False, via_stack='via_stack_heater_mtop', heater_taper_length=5.0)' ),
('straight_heater_metal_90_90', 'can be called by', 'c = gf.components.straight_heater_metal_90_90(length=320.0, length_undercut_spacing=6.0, length_undercut=30.0, length_straight=0.1, length_straight_input=15.0, cross_section='xs_sc', cross_section_heater='xs_heater_metal', cross_section_waveguide_heater='xs_sc_heater_metal', cross_section_heater_undercut='xs_sc_heater_metal_undercut', with_undercut=False, via_stack='via_stack_heater_mtop', port_orientation1=90, port_orientation2=90, heater_taper_length=5.0)' ),
('straight_heater_metal_simple', 'can be called by', 'c = gf.components.straight_heater_metal_simple(length=320.0, cross_section_heater='xs_heater_metal', cross_section_waveguide_heater='xs_sc_heater_metal', via_stack='via_stack_heater_mtop', heater_taper_length=5.0)' ),
('straight_heater_metal_undercut', 'can be called by', 'c = gf.components.straight_heater_metal_undercut(length=320.0, length_undercut_spacing=6.0, length_undercut=30.0, length_straight=0.1, length_straight_input=15.0, cross_section='xs_sc', cross_section_heater='xs_heater_metal', cross_section_waveguide_heater='xs_sc_heater_metal', cross_section_heater_undercut='xs_sc_heater_metal_undercut', with_undercut=True, via_stack='via_stack_heater_mtop', heater_taper_length=5.0)' ),
('straight_heater_metal_undercut_90_90', 'can be called by', 'c = gf.components.straight_heater_metal_undercut_90_90(length=320.0, length_undercut_spacing=6.0, length_undercut=30.0, length_straight=0.1, length_straight_input=15.0, cross_section='xs_sc', cross_section_heater='xs_heater_metal', cross_section_waveguide_heater='xs_sc_heater_metal', cross_section_heater_undercut='xs_sc_heater_metal_undercut', with_undercut=False, via_stack='via_stack_heater_mtop', port_orientation1=90, port_orientation2=90, heater_taper_length=5.0)' ),
('straight_pin', 'can be called by', 'c = gf.components.straight_pin(length=500.0, via_stack_width=10.0, via_stack_spacing=2)' ),
('straight_pin_slot', 'can be called by', 'c = gf.components.straight_pin_slot(length=500.0, via_stack_width=10.0, via_stack_spacing=3.0, via_stack_slab_spacing=2.0)' ),
('straight_pn', 'can be called by', 'c = gf.components.straight_pn(length=2000, via_stack_width=10.0, via_stack_spacing=2)' ),
('straight_rib', 'can be called by', 'c = gf.components.straight_rib(length=10.0, npoints=2)' ),
('straight_rib_tapered', 'can be called by', 'c = gf.components.straight_rib_tapered(length=5.0, port1='o2', port2='o1', port_type='optical', centered=False)' ),
('switch_tree', 'can be called by', 'c = gf.components.switch_tree(noutputs=4, spacing=[500, 100], cross_section='xs_sc')' ),
('taper', 'can be called by', 'c = gf.components.taper(length=10.0, width1=0.5, with_two_ports=True, cross_section='xs_sc', port_order_name=['o1', 'o2'], port_order_types=['optical', 'optical'])' ),
('taper_adiabatic', 'can be called by', 'c = gf.components.taper_adiabatic(width1=0.5, width2=5.0, length=0, alpha=1, wavelength=1.55, npoints=200, cross_section='xs_sc')' ),
('taper_cross_section', 'can be called by', 'c = gf.components.taper_cross_section(cross_section2='xs_rc', length=10, npoints=100, linear=False, width_type='sine')' ),
('taper_cross_section_linear', 'can be called by', 'c = gf.components.taper_cross_section_linear(cross_section2='xs_rc', length=10, npoints=2, linear=True, width_type='sine')' ),
('taper_cross_section_parabolic', 'can be called by', 'c = gf.components.taper_cross_section_parabolic(cross_section2='xs_rc', length=10, npoints=101, linear=False, width_type='parabolic')' ),
('taper_cross_section_sine', 'can be called by', 'c = gf.components.taper_cross_section_sine(cross_section2='xs_rc', length=10, npoints=101, linear=False, width_type='sine')' ),
('taper_from_csv', 'can be called by', 'c = gf.components.taper_from_csv(cross_section='xs_sc')' ),
('taper_parabolic', 'can be called by', 'c = gf.components.taper_parabolic(length=20, width1=0.5, width2=5.0, exp=0.5, npoints=100, layer='WG')' ),
('taper_sc_nc', 'can be called by', 'c = gf.components.taper_sc_nc(length=20.0, width1=0.5, width2=0.15, w_slab1=0.15, w_slab2=1.0, layer_wg='WG', layer_slab='WGN', cross_section='xs_sc')' ),
('taper_strip_to_ridge', 'can be called by', 'c = gf.components.taper_strip_to_ridge(length=10.0, width1=0.5, width2=0.5, w_slab1=0.15, w_slab2=6.0, layer_wg='WG', layer_slab='SLAB90', cross_section='xs_sc')' ),
('taper_strip_to_ridge_trenches', 'can be called by', 'c = gf.components.taper_strip_to_ridge_trenches(length=10.0, width=0.5, slab_offset=3.0, trench_width=2.0, trench_layer='DEEP_ETCH', layer_wg='WG', trench_offset=0.1)' ),
('terminator', 'can be called by', 'c = gf.components.terminator(length=50, tapered_width=0.2, doping_layers=['NPP'], doping_offset=1.0)' ),
('text', 'can be called by', 'c = gf.components.text(text='abcd', size=10.0, position=[0, 0], justify='left', layer='WG')' ),
('text_freetype', 'can be called by', 'c = gf.components.text_freetype(text='abcd', size=10, justify='left', layer='WG')' ),
('text_lines', 'can be called by', 'c = gf.components.text_lines(text=['Chip', '01'], size=0.4, layer='WG')' ),
('text_rectangular', 'can be called by', 'c = gf.components.text_rectangular(text='abcd', size=10.0, position=[0.0, 0.0], justify='left', layer='WG')' ),
('text_rectangular_multi_layer', 'can be called by', 'c = gf.components.text_rectangular_multi_layer(text='abcd', layers=['WG', 'M1', 'M2', 'MTOP'])' ),
('triangle', 'can be called by', 'c = gf.components.triangle(x=10, xtop=0, y=20, ybot=0, layer='WG')' ),
('verniers', 'can be called by', 'c = gf.components.verniers(widths=[0.1, 0.2, 0.3, 0.4, 0.5], gap=0.1, xsize=100.0, layer_label='TEXT')' ),
('version_stamp', 'can be called by', 'c = gf.components.version_stamp(labels=['demo_label'], with_qr_code=False, layer='WG', pixel_size=1, text_size=10)' ),
('via_chain', 'can be called by', 'c = gf.components.via_chain(num_vias=100, cols=10, layers_bot=['M1'], layers_top=['M2'], offsets_top=[0], offsets_bot=[0], via_min_enclosure=1.0, min_metal_spacing=1.0, via_xoffset=0.0)' ),
('via_cutback', 'can be called by', 'c = gf.components.via_cutback(num_vias=200.0, wire_width=10.0, via_width=5.0, via_spacing=30.0, min_pad_spacing=10.0, pad_size=[100, 100], layer1='HEATER', layer2='M1', via_layer='VIAC', wire_pad_inclusion=2.0)' ),
('via_stack', 'can be called by', 'c = gf.components.via_stack(size=[11.0, 11.0], layers=['M1', 'M2', 'MTOP'], correct_size=True, slot_horizontal=False, slot_vertical=False)' ),
('via_stack_corner45', 'can be called by', 'c = gf.components.via_stack_corner45(width=10, layers=['M1', 'M2', 'MTOP'], correct_size=True)' ),
('via_stack_corner45_extended', 'can be called by', 'c = gf.components.via_stack_corner45_extended(width=3, length=10)' ),
('via_stack_from_rules', 'can be called by', 'c = gf.components.via_stack_from_rules(size=[1.2, 1.2], layers=['M1', 'M2', 'MTOP'], via_min_size=[[0.2, 0.2], [0.2, 0.2]], via_min_gap=[[0.1, 0.1], [0.1, 0.1]], via_min_enclosure=[0.15, 0.25])' ),
('via_stack_slot', 'can be called by', 'c = gf.components.via_stack_slot(size=[11.0, 11.0], layers=['M1', 'M2'], layer_offsets=[0, 1.0], enclosure=1.0, ysize=0.5, yspacing=2.0)' ),
('via_stack_with_offset', 'can be called by', 'c = gf.components.via_stack_with_offset(layers=['PPP', 'M1'], size=[10, 10])' ),
('wafer', 'can be called by', 'c = gf.components.wafer(cols=[2, 6, 6, 8, 8, 6, 6, 2], die_name_col_row=False)' ),
('wire_corner', 'can be called by', 'c = gf.components.wire_corner(cross_section='xs_metal_routing')' ),
('wire_corner45', 'can be called by', 'c = gf.components.wire_corner45(cross_section='xs_metal_routing', radius=10, with_corner90_ports=True)' ),
('wire_sbend', 'can be called by', 'c = gf.components.wire_sbend(dx=20.0, dy=10.0)' ),
('wire_straight', 'can be called by', 'c = gf.components.wire_straight(length=10.0, npoints=2, cross_section='xs_metal_routing')' ),
